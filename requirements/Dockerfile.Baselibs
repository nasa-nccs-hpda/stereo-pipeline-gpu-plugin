FROM nvcr.io/nvidia/pytorch:25.05-py3

ARG STEREO_URL="https://github.com/NeoGeographyToolkit/StereoPipeline/releases/download/3.5.0/StereoPipeline-3.5.0-2025-04-28-x86_64-Linux.tar.bz2"
ENV PATH="$PATH:/opt/StereoPipeline/bin"
ENV DEBIAN_FRONTEND=noninteractive

# Install main dependencies and GDAL
RUN apt-get update && \
    apt-get -y dist-upgrade && \
    apt-get install -y --no-install-recommends \
        wget vim curl git procps gcc g++ bzip2 libssl-dev \
        libsqlite3-dev libx11-dev libx11-xcb1 libgeos++-dev libproj-dev \
        build-essential parallel libdatetime-perl gawk util-linux bc \
        libgdbm-dev libc6-dev libbz2-dev libffi-dev libgdal-dev gdal-bin \
        zlib1g-dev liblzma-dev libgirepository1.0-dev libcairo2-dev \
        pkg-config gir1.2-gtk-3.0 libnetcdf-dev && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/apt

# Install StereoPipeline
RUN mkdir -p "/opt/DgStereo" && \
    wget "${STEREO_URL}" -O /opt/StereoPipeline.tar.bz2 && \
    cd /opt && \
    tar -jxf StereoPipeline.tar.bz2 && \
    rm /opt/StereoPipeline.tar.bz2 && \
    mv /opt/StereoPipeline* /opt/StereoPipeline

# Python geospatial tools
RUN pip install rioxarray

# Install OpenCV build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        cmake \
        ninja-build \
        libgtk2.0-dev \
        libavcodec-dev \
        libavformat-dev \
        libswscale-dev \
        libtbb-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        python3-dev \
        python3-numpy \
        libv4l-dev \
        libxvidcore-dev \
        libx264-dev && \
    rm -rf /var/lib/apt/lists/*

# Build OpenCV from master with CUDA (DNN disabled for compatibility)
RUN mkdir -p /opt/opencv_build && \
    cd /opt && \
    git clone https://github.com/opencv/opencv.git && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd /opt/opencv && \
    mkdir build && \
    cd build && \
    cmake -G Ninja \
      -D CMAKE_BUILD_TYPE=Release \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib/modules \
      -D WITH_CUDA=ON \
      -D ENABLE_FAST_MATH=1 \
      -D CUDA_FAST_MATH=1 \
      -D WITH_CUBLAS=1 \
      -D WITH_V4L=ON \
      -D WITH_QT=OFF \
      -D WITH_OPENGL=ON \
      -D BUILD_opencv_python3=ON \
      -D BUILD_opencv_python2=OFF \
      -D BUILD_TESTS=OFF \
      -D BUILD_PERF_TESTS=OFF \
      -D BUILD_EXAMPLES=OFF \
      -D BUILD_opencv_dnn=OFF \
      -D CUDA_ARCH_BIN="6.0;7.0;7.5;8.0;8.6;9.0" \
      .. && \
    ninja && \
    ninja install && \
    ldconfig && \
    rm -rf /opt/opencv /opt/opencv_contrib /opt/opencv_build

# Refresh the linker cache and create proper symlinks
RUN ldconfig
	
HEALTHCHECK NONE
ENTRYPOINT []
CMD ["/bin/bash"]
